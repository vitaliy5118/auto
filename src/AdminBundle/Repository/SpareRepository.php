<?php

namespace AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AdminBundle\Services\Crud\MyCrudInterface;
use AdminBundle\Services\Crud\Spare;

/**
 * SpareRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpareRepository extends EntityRepository implements MyCrudInterface {
    
    /**
     *
     * @var array $container
     */
    private $container = [];

    public function getDataById($id) {
        $query = $this->getEntityManager()
                        ->createQuery('
                                    SELECT spare, brand, category, sparescatalog, model 
                                    FROM AdminBundle:Spare spare
                                    JOIN spare.brand brand
                                    JOIN spare.category category
                                    JOIN spare.spare sparescatalog
                                    JOIN brand.model model
                                    WHERE spare.id = :id'
                        )->setParameter('id', $id);
        try {
             
            $this->container = new Spare($query->getSingleResult());   
            
            return $this->container;

        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    /**
     * return array of all data in object format
     * 
     * @return array $container
     */
    public function makeDataContainer() {
        
        try {
            
            foreach ( $this->findAll() as $data){
             $this->container[] = new Spare($data);   
            }
            
            return $this->container;
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
        /**
     * Save data
     */
    public function save(){}
    /**
     * Edit data
     */
    public function edit($id){}
    /**
     * Delete data
     * @param type $id
     */
    public function delete($id){}
    
    

}
